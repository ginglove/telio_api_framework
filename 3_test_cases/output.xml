<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.1 (Python 3.8.5 on linux)" generated="20201209 16:56:22.796" rpa="false">
<suite id="s1" name="Fake Test" source="/home/giang/Documents/telio_api_example/3_test_cases/fake_test.robot">
<test id="s1-t1" name="[TC][LOS][POST][200] - Register User">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[LETTERS]</arg>
</arguments>
<assign>
<var>${random_name}</var>
</assign>
<msg timestamp="20201209 16:56:23.093" level="INFO">${random_name} = JPkPdCFLpx</msg>
<status status="PASS" starttime="20201209 16:56:23.092" endtime="20201209 16:56:23.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${suite_random_name}</arg>
<arg>${random_name}</arg>
</arguments>
<msg timestamp="20201209 16:56:23.093" level="INFO">${suite_random_name} = JPkPdCFLpx</msg>
<status status="PASS" starttime="20201209 16:56:23.093" endtime="20201209 16:56:23.093"></status>
</kw>
<kw name="[Pre_Request][LOS][POST] - Register User - body" library="LOS_API_Keywords">
<arguments>
<arg>$.email= ${random_name}@gmail.com</arg>
<arg>$.password=12345678</arg>
<arg>$.confirmPassword=12345678</arg>
</arguments>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>{</arg>
<arg>"email": "string",</arg>
<arg>"password": "string",</arg>
<arg>"confirmPassword": "string"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${schema}</var>
</assign>
<msg timestamp="20201209 16:56:23.094" level="INFO">${schema} = {"email": "string","password": "string","confirmPassword": "string"}</msg>
<status status="PASS" starttime="20201209 16:56:23.094" endtime="20201209 16:56:23.094"></status>
</kw>
<kw name="Generate Json" library="json_generator">
<arguments>
<arg>json_schema=${schema}</arg>
<arg>args=${arg_dic}</arg>
<arg>remove_null=${remove_null}</arg>
<arg>remove_empty=${remove_empty}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20201209 16:56:23.094" level="INFO">${body} = {
    "confirmPassword": "12345678",
    "email": " JPkPdCFLpx@gmail.com",
    "password": "12345678"
}</msg>
<status status="PASS" starttime="20201209 16:56:23.094" endtime="20201209 16:56:23.094"></status>
</kw>
<kw name="[common] - Set variable" library="common">
<arguments>
<arg>name=${output}</arg>
<arg>value=${body}</arg>
</arguments>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Match</arg>
<arg>${name}</arg>
<arg>suite_*</arg>
</arguments>
<assign>
<var>${is_suite_var}</var>
</assign>
<kw name="Should Match" library="BuiltIn">
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<arguments>
<arg>${name}</arg>
<arg>suite_*</arg>
</arguments>
<msg timestamp="20201209 16:56:23.095" level="FAIL">'body' does not match 'suite_*'</msg>
<status status="FAIL" starttime="20201209 16:56:23.095" endtime="20201209 16:56:23.095"></status>
</kw>
<msg timestamp="20201209 16:56:23.095" level="INFO">${is_suite_var} = False</msg>
<status status="PASS" starttime="20201209 16:56:23.095" endtime="20201209 16:56:23.095"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Variable Should Exist</arg>
<arg>${TEST_NAME}</arg>
</arguments>
<assign>
<var>${has_test_case}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${TEST_NAME}</arg>
</arguments>
<status status="PASS" starttime="20201209 16:56:23.096" endtime="20201209 16:56:23.096"></status>
</kw>
<msg timestamp="20201209 16:56:23.096" level="INFO">${has_test_case} = True</msg>
<status status="PASS" starttime="20201209 16:56:23.095" endtime="20201209 16:56:23.096"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${is_suite_var}'=='${True}' or '${has_test_case}'=='${False}'</arg>
<arg>set suite variable</arg>
<arg>\${${name}}</arg>
<arg>${value}</arg>
<arg>ELSE</arg>
<arg>set test variable</arg>
<arg>\${${name}}</arg>
<arg>${value}</arg>
</arguments>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>\${${name}}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20201209 16:56:23.096" level="INFO">${body} = {
    "confirmPassword": "12345678",
    "email": " JPkPdCFLpx@gmail.com",
    "password": "12345678"
}</msg>
<status status="PASS" starttime="20201209 16:56:23.096" endtime="20201209 16:56:23.096"></status>
</kw>
<status status="PASS" starttime="20201209 16:56:23.096" endtime="20201209 16:56:23.096"></status>
</kw>
<status status="PASS" starttime="20201209 16:56:23.094" endtime="20201209 16:56:23.096"></status>
</kw>
<status status="PASS" starttime="20201209 16:56:23.093" endtime="20201209 16:56:23.097"></status>
</kw>
<kw name="[common][pre_request] - authorization headers" library="API_Keywords">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>content-type=${content_type}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20201209 16:56:23.097" level="INFO">${headers} = {'content-type': 'application/json'}</msg>
<status status="PASS" starttime="20201209 16:56:23.097" endtime="20201209 16:56:23.097"></status>
</kw>
<kw name="[common] - Set variable" library="common">
<arguments>
<arg>name=${output}</arg>
<arg>value=${headers}</arg>
</arguments>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Match</arg>
<arg>${name}</arg>
<arg>suite_*</arg>
</arguments>
<assign>
<var>${is_suite_var}</var>
</assign>
<kw name="Should Match" library="BuiltIn">
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<arguments>
<arg>${name}</arg>
<arg>suite_*</arg>
</arguments>
<msg timestamp="20201209 16:56:23.098" level="FAIL">'headers' does not match 'suite_*'</msg>
<status status="FAIL" starttime="20201209 16:56:23.098" endtime="20201209 16:56:23.098"></status>
</kw>
<msg timestamp="20201209 16:56:23.098" level="INFO">${is_suite_var} = False</msg>
<status status="PASS" starttime="20201209 16:56:23.097" endtime="20201209 16:56:23.098"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Variable Should Exist</arg>
<arg>${TEST_NAME}</arg>
</arguments>
<assign>
<var>${has_test_case}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${TEST_NAME}</arg>
</arguments>
<status status="PASS" starttime="20201209 16:56:23.098" endtime="20201209 16:56:23.098"></status>
</kw>
<msg timestamp="20201209 16:56:23.098" level="INFO">${has_test_case} = True</msg>
<status status="PASS" starttime="20201209 16:56:23.098" endtime="20201209 16:56:23.098"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${is_suite_var}'=='${True}' or '${has_test_case}'=='${False}'</arg>
<arg>set suite variable</arg>
<arg>\${${name}}</arg>
<arg>${value}</arg>
<arg>ELSE</arg>
<arg>set test variable</arg>
<arg>\${${name}}</arg>
<arg>${value}</arg>
</arguments>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>\${${name}}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20201209 16:56:23.099" level="INFO">${headers} = {'content-type': 'application/json'}</msg>
<status status="PASS" starttime="20201209 16:56:23.099" endtime="20201209 16:56:23.099"></status>
</kw>
<status status="PASS" starttime="20201209 16:56:23.098" endtime="20201209 16:56:23.099"></status>
</kw>
<status status="PASS" starttime="20201209 16:56:23.097" endtime="20201209 16:56:23.099"></status>
</kw>
<status status="PASS" starttime="20201209 16:56:23.097" endtime="20201209 16:56:23.099"></status>
</kw>
<kw name="[LOS][POST][200] - Register User" library="LOS_API_Keywords">
<arguments>
<arg>headers=${headers}</arg>
<arg>body=${body}</arg>
</arguments>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>${api_los_url}/${post_register_user}</arg>
<arg>headers=${headers}</arg>
<arg>body=${body}</arg>
</arguments>
<status status="PASS" starttime="20201209 16:56:23.099" endtime="20201209 16:56:23.138"></status>
</kw>
<kw name="Rest Extract" library="rest_util">
<msg timestamp="20201209 16:56:23.138" level="INFO">
{
    "request": {
        "method": "POST",
        "url": "http://210.245.51.249:9001//los/users/register",
        "scheme": "http",
        "netloc": "210.245.51.249:9001",
        "path": "//los/users/register",
        "query": {},
        "body": {
            "confirmPassword": "12345678",
            "email": " JPkPdCFLpx@gmail.com",
            "password": "12345678"
        },
        "headers": {
            "Accept": "application/json, */*",
            "Content-Type": "application/json",
            "User-Agent": "RESTinstance/1.0.0rc4",
            "content-type": "application/json"
        },
        "proxies": {},
        "timeout": [
            null,
            null
        ],
        "cert": null,
        "sslVerify": false,
        "allowRedirects": true,
        "timestamp": {
            "utc": "2020-12-09T09:56:23.121888+00:00",
            "local": "2020-12-09T16:56:23.121888+07:00"
        }
    },
    "response": {
        "seconds": 0.020007,
        "status": 200,
        "body": {
            "status": {
                "code": "200",
                "message": "Success",
                "description": null
            },
            "data": {
                "id": 346
            }
        },
        "headers": {
            "Access-Control-Allow-Credentials": "true",
            "Access-Control-Allow-Methods": "POST, GET, OPTIONS, DELETE",
            "Access-Control-Max-Age": "3600",
            "Access-Control-Allow-Headers": "Content-Type, Accept, X-Requested-With, remember-me",
            "Content-Type": "application/json",
            "Transfer-Encoding": "chunked",
            "Date": "Wed, 09 Dec 2020 09:56:23 GMT",
            "Keep-Alive": "timeout=60",
            "Connection": "keep-alive"
        }
    }
}</msg>
<status status="PASS" starttime="20201209 16:56:23.138" endtime="20201209 16:56:23.138"></status>
</kw>
<kw name="[common][verify] - Http status code is &quot;200&quot;" library="common">
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>${code}</arg>
</arguments>
<status status="PASS" starttime="20201209 16:56:23.139" endtime="20201209 16:56:23.139"></status>
</kw>
<status status="PASS" starttime="20201209 16:56:23.139" endtime="20201209 16:56:23.140"></status>
</kw>
<kw name="[common][verify] - status code is &quot;200&quot;" library="common">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>$.status.code</arg>
<arg>${code}</arg>
</arguments>
<status status="PASS" starttime="20201209 16:56:23.140" endtime="20201209 16:56:23.157"></status>
</kw>
<status status="PASS" starttime="20201209 16:56:23.140" endtime="20201209 16:56:23.158"></status>
</kw>
<kw name="[common][verify] - status message is &quot;Success&quot;" library="common">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>$.status.message</arg>
<arg>${message}</arg>
</arguments>
<status status="PASS" starttime="20201209 16:56:23.158" endtime="20201209 16:56:23.171"></status>
</kw>
<status status="PASS" starttime="20201209 16:56:23.158" endtime="20201209 16:56:23.171"></status>
</kw>
<status status="PASS" starttime="20201209 16:56:23.099" endtime="20201209 16:56:23.171"></status>
</kw>
<status status="PASS" starttime="20201209 16:56:23.092" endtime="20201209 16:56:23.171" critical="yes"></status>
</test>
<test id="s1-t2" name="[TC][LOS][POST][200] - Login Successful">
<kw name="[Pre_Request][LOS][POST] - User Login - body" library="LOS_API_Keywords">
<arguments>
<arg>$.email=${suite_random_name}@gmail.com</arg>
<arg>$.password=12345678</arg>
</arguments>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>{</arg>
<arg>"email": "string",</arg>
<arg>"password": "string"</arg>
<arg>}</arg>
</arguments>
<assign>
<var>${schema}</var>
</assign>
<msg timestamp="20201209 16:56:23.172" level="INFO">${schema} = {"email": "string","password": "string"}</msg>
<status status="PASS" starttime="20201209 16:56:23.172" endtime="20201209 16:56:23.172"></status>
</kw>
<kw name="Generate Json" library="json_generator">
<arguments>
<arg>json_schema=${schema}</arg>
<arg>args=${arg_dic}</arg>
<arg>remove_null=${remove_null}</arg>
<arg>remove_empty=${remove_empty}</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20201209 16:56:23.173" level="INFO">${body} = {
    "email": "JPkPdCFLpx@gmail.com",
    "password": "12345678"
}</msg>
<status status="PASS" starttime="20201209 16:56:23.172" endtime="20201209 16:56:23.173"></status>
</kw>
<kw name="[common] - Set variable" library="common">
<arguments>
<arg>name=${output}</arg>
<arg>value=${body}</arg>
</arguments>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Match</arg>
<arg>${name}</arg>
<arg>suite_*</arg>
</arguments>
<assign>
<var>${is_suite_var}</var>
</assign>
<kw name="Should Match" library="BuiltIn">
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<arguments>
<arg>${name}</arg>
<arg>suite_*</arg>
</arguments>
<msg timestamp="20201209 16:56:23.173" level="FAIL">'body' does not match 'suite_*'</msg>
<status status="FAIL" starttime="20201209 16:56:23.173" endtime="20201209 16:56:23.173"></status>
</kw>
<msg timestamp="20201209 16:56:23.173" level="INFO">${is_suite_var} = False</msg>
<status status="PASS" starttime="20201209 16:56:23.173" endtime="20201209 16:56:23.173"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Variable Should Exist</arg>
<arg>${TEST_NAME}</arg>
</arguments>
<assign>
<var>${has_test_case}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${TEST_NAME}</arg>
</arguments>
<status status="PASS" starttime="20201209 16:56:23.174" endtime="20201209 16:56:23.174"></status>
</kw>
<msg timestamp="20201209 16:56:23.174" level="INFO">${has_test_case} = True</msg>
<status status="PASS" starttime="20201209 16:56:23.173" endtime="20201209 16:56:23.174"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${is_suite_var}'=='${True}' or '${has_test_case}'=='${False}'</arg>
<arg>set suite variable</arg>
<arg>\${${name}}</arg>
<arg>${value}</arg>
<arg>ELSE</arg>
<arg>set test variable</arg>
<arg>\${${name}}</arg>
<arg>${value}</arg>
</arguments>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>\${${name}}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20201209 16:56:23.175" level="INFO">${body} = {
    "email": "JPkPdCFLpx@gmail.com",
    "password": "12345678"
}</msg>
<status status="PASS" starttime="20201209 16:56:23.174" endtime="20201209 16:56:23.175"></status>
</kw>
<status status="PASS" starttime="20201209 16:56:23.174" endtime="20201209 16:56:23.175"></status>
</kw>
<status status="PASS" starttime="20201209 16:56:23.173" endtime="20201209 16:56:23.175"></status>
</kw>
<status status="PASS" starttime="20201209 16:56:23.172" endtime="20201209 16:56:23.175"></status>
</kw>
<kw name="[common][pre_request] - authorization headers" library="API_Keywords">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>content-type=${content_type}</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20201209 16:56:23.176" level="INFO">${headers} = {'content-type': 'application/json'}</msg>
<status status="PASS" starttime="20201209 16:56:23.175" endtime="20201209 16:56:23.176"></status>
</kw>
<kw name="[common] - Set variable" library="common">
<arguments>
<arg>name=${output}</arg>
<arg>value=${headers}</arg>
</arguments>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Match</arg>
<arg>${name}</arg>
<arg>suite_*</arg>
</arguments>
<assign>
<var>${is_suite_var}</var>
</assign>
<kw name="Should Match" library="BuiltIn">
<doc>Fails if the given ``string`` does not match the given ``pattern``.</doc>
<arguments>
<arg>${name}</arg>
<arg>suite_*</arg>
</arguments>
<msg timestamp="20201209 16:56:23.176" level="FAIL">'headers' does not match 'suite_*'</msg>
<status status="FAIL" starttime="20201209 16:56:23.176" endtime="20201209 16:56:23.176"></status>
</kw>
<msg timestamp="20201209 16:56:23.176" level="INFO">${is_suite_var} = False</msg>
<status status="PASS" starttime="20201209 16:56:23.176" endtime="20201209 16:56:23.176"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Variable Should Exist</arg>
<arg>${TEST_NAME}</arg>
</arguments>
<assign>
<var>${has_test_case}</var>
</assign>
<kw name="Variable Should Exist" library="BuiltIn">
<doc>Fails unless the given variable exists within the current scope.</doc>
<arguments>
<arg>${TEST_NAME}</arg>
</arguments>
<status status="PASS" starttime="20201209 16:56:23.177" endtime="20201209 16:56:23.177"></status>
</kw>
<msg timestamp="20201209 16:56:23.177" level="INFO">${has_test_case} = True</msg>
<status status="PASS" starttime="20201209 16:56:23.177" endtime="20201209 16:56:23.177"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${is_suite_var}'=='${True}' or '${has_test_case}'=='${False}'</arg>
<arg>set suite variable</arg>
<arg>\${${name}}</arg>
<arg>${value}</arg>
<arg>ELSE</arg>
<arg>set test variable</arg>
<arg>\${${name}}</arg>
<arg>${value}</arg>
</arguments>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>\${${name}}</arg>
<arg>${value}</arg>
</arguments>
<msg timestamp="20201209 16:56:23.178" level="INFO">${headers} = {'content-type': 'application/json'}</msg>
<status status="PASS" starttime="20201209 16:56:23.178" endtime="20201209 16:56:23.178"></status>
</kw>
<status status="PASS" starttime="20201209 16:56:23.177" endtime="20201209 16:56:23.178"></status>
</kw>
<status status="PASS" starttime="20201209 16:56:23.176" endtime="20201209 16:56:23.178"></status>
</kw>
<status status="PASS" starttime="20201209 16:56:23.175" endtime="20201209 16:56:23.178"></status>
</kw>
<kw name="[LOS][KW][POST][200] - User Login" library="LOS_API_Keywords">
<arguments>
<arg>headers=${headers}</arg>
<arg>body=${body}</arg>
</arguments>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>${api_los_url}/${post_login_user_url}</arg>
<arg>headers=${headers}</arg>
<arg>body=${body}</arg>
</arguments>
<status status="PASS" starttime="20201209 16:56:23.179" endtime="20201209 16:56:23.188"></status>
</kw>
<kw name="Rest Extract" library="rest_util">
<msg timestamp="20201209 16:56:23.189" level="INFO">
{
    "request": {
        "method": "POST",
        "url": "http://210.245.51.249:9001//los/users/login",
        "scheme": "http",
        "netloc": "210.245.51.249:9001",
        "path": "//los/users/login",
        "query": {},
        "body": {
            "email": "JPkPdCFLpx@gmail.com",
            "password": "12345678"
        },
        "headers": {
            "Accept": "application/json, */*",
            "Content-Type": "application/json",
            "User-Agent": "RESTinstance/1.0.0rc4",
            "content-type": "application/json"
        },
        "proxies": {},
        "timeout": [
            null,
            null
        ],
        "cert": null,
        "sslVerify": false,
        "allowRedirects": true,
        "timestamp": {
            "utc": "2020-12-09T09:56:23.187479+00:00",
            "local": "2020-12-09T16:56:23.187479+07:00"
        }
    },
    "response": {
        "seconds": 0.007667,
        "status": 200,
        "body": {
            "status": {
                "code": "500",
                "message": "Business exception",
                "description": "Your account is inactive"
            },
            "data": null
        },
        "headers": {
            "Access-Control-Allow-Credentials": "true",
            "Access-Control-Allow-Methods": "POST, GET, OPTIONS, DELETE",
            "Access-Control-Max-Age": "3600",
            "Access-Control-Allow-Headers": "Content-Type, Accept, X-Requested-With, remember-me",
            "Content-Type": "application/json",
            "Transfer-Encoding": "chunked",
            "Date": "Wed, 09 Dec 2020 09:56:23 GMT",
            "Keep-Alive": "timeout=60",
            "Connection": "keep-alive"
        }
    }
}</msg>
<status status="PASS" starttime="20201209 16:56:23.188" endtime="20201209 16:56:23.189"></status>
</kw>
<kw name="[common][verify] - Http status code is &quot;200&quot;" library="common">
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>${code}</arg>
</arguments>
<status status="PASS" starttime="20201209 16:56:23.189" endtime="20201209 16:56:23.190"></status>
</kw>
<status status="PASS" starttime="20201209 16:56:23.189" endtime="20201209 16:56:23.190"></status>
</kw>
<kw name="[common][verify] - status code is &quot;200&quot;" library="common">
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>$.status.code</arg>
<arg>${code}</arg>
</arguments>
<msg timestamp="20201209 16:56:23.215" level="FAIL">'500' is not one of ['200']

Failed validating 'enum' in schema:
    {'default': '500', 'enum': ['200'], 'type': 'string'}

On instance:
    '500'</msg>
<status status="FAIL" starttime="20201209 16:56:23.190" endtime="20201209 16:56:23.215"></status>
</kw>
<status status="FAIL" starttime="20201209 16:56:23.190" endtime="20201209 16:56:23.215"></status>
</kw>
<status status="FAIL" starttime="20201209 16:56:23.178" endtime="20201209 16:56:23.215"></status>
</kw>
<status status="FAIL" starttime="20201209 16:56:23.171" endtime="20201209 16:56:23.216" critical="yes">'500' is not one of ['200']

Failed validating 'enum' in schema:
    {'default': '500', 'enum': ['200'], 'type': 'string'}

On instance:
    '500'</status>
</test>
<doc>Suite description</doc>
<status status="FAIL" starttime="20201209 16:56:22.796" endtime="20201209 16:56:23.216"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="1">Critical Tests</stat>
<stat pass="1" fail="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="1" id="s1" name="Fake Test">Fake Test</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
